'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.42000
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace My
    
    <Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0"),  _
     Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)>  _
    Partial Friend NotInheritable Class MySettings
        Inherits Global.System.Configuration.ApplicationSettingsBase
        
        Private Shared defaultInstance As MySettings = CType(Global.System.Configuration.ApplicationSettingsBase.Synchronized(New MySettings()),MySettings)
        
#Region "Funktion zum automatischen Speichern von My.Settings"
#If _MyType = "WindowsForms" Then
    Private Shared addedHandler As Boolean

    Private Shared addedHandlerLockObject As New Object

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
    Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
        If My.Application.SaveMySettingsOnExit Then
            My.Settings.Save()
        End If
    End Sub
#End If
#End Region
        
        Public Shared ReadOnly Property [Default]() As MySettings
            Get
                
#If _MyType = "WindowsForms" Then
               If Not addedHandler Then
                    SyncLock addedHandlerLockObject
                        If Not addedHandler Then
                            AddHandler My.Application.Shutdown, AddressOf AutoSaveSettings
                            addedHandler = True
                        End If
                    End SyncLock
                End If
#End If
                Return defaultInstance
            End Get
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("True")>  _
        Public Property ShowSplashscreen() As Boolean
            Get
                Return CType(Me("ShowSplashscreen"),Boolean)
            End Get
            Set
                Me("ShowSplashscreen") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Feedback() As Global.System.Collections.ArrayList
            Get
                Return CType(Me("Feedback"),Global.System.Collections.ArrayList)
            End Get
            Set
                Me("Feedback") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("True")>  _
        Public Property ShowNotifications() As Boolean
            Get
                Return CType(Me("ShowNotifications"),Boolean)
            End Get
            Set
                Me("ShowNotifications") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("False")>  _
        Public Property IncludeSubfolders() As Boolean
            Get
                Return CType(Me("IncludeSubfolders"),Boolean)
            End Get
            Set
                Me("IncludeSubfolders") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("P_yyyy-MM-dd_HH-mm-ss")>  _
        Public Property Format() As String
            Get
                Return CType(Me("Format"),String)
            End Get
            Set
                Me("Format") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("True")>  _
        Public Property UseEXIF() As Boolean
            Get
                Return CType(Me("UseEXIF"),Boolean)
            End Get
            Set
                Me("UseEXIF") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EnabledExtensions() As Global.System.Collections.ArrayList
            Get
                Return CType(Me("EnabledExtensions"),Global.System.Collections.ArrayList)
            End Get
            Set
                Me("EnabledExtensions") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("True")>  _
        Public Property EnableSorting() As Boolean
            Get
                Return CType(Me("EnableSorting"),Boolean)
            End Get
            Set
                Me("EnableSorting") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("True")>  _
        Public Property EnableRenaming() As Boolean
            Get
                Return CType(Me("EnableRenaming"),Boolean)
            End Get
            Set
                Me("EnableRenaming") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SelectedFolders() As Global.System.Collections.Specialized.StringCollection
            Get
                Return CType(Me("SelectedFolders"),Global.System.Collections.Specialized.StringCollection)
            End Get
            Set
                Me("SelectedFolders") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("False")>  _
        Public Property CreateDuplicate() As Boolean
            Get
                Return CType(Me("CreateDuplicate"),Boolean)
            End Get
            Set
                Me("CreateDuplicate") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("False")>  _
        Public Property CreateCopy() As Boolean
            Get
                Return CType(Me("CreateCopy"),Boolean)
            End Get
            Set
                Me("CreateCopy") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ImageExtensions() As Global.System.Collections.Specialized.StringCollection
            Get
                Return CType(Me("ImageExtensions"),Global.System.Collections.Specialized.StringCollection)
            End Get
            Set
                Me("ImageExtensions") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DocumentExtensions() As Global.System.Collections.Specialized.StringCollection
            Get
                Return CType(Me("DocumentExtensions"),Global.System.Collections.Specialized.StringCollection)
            End Get
            Set
                Me("DocumentExtensions") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MusicExtensions() As Global.System.Collections.Specialized.StringCollection
            Get
                Return CType(Me("MusicExtensions"),Global.System.Collections.Specialized.StringCollection)
            End Get
            Set
                Me("MusicExtensions") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VideoExtensions() As Global.System.Collections.Specialized.StringCollection
            Get
                Return CType(Me("VideoExtensions"),Global.System.Collections.Specialized.StringCollection)
            End Get
            Set
                Me("VideoExtensions") = value
            End Set
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ExceptionExtensions() As Global.System.Collections.Specialized.StringCollection
            Get
                Return CType(Me("ExceptionExtensions"),Global.System.Collections.Specialized.StringCollection)
            End Get
            Set
                Me("ExceptionExtensions") = value
            End Set
        End Property
    End Class
End Namespace

Namespace My
    
    <Global.Microsoft.VisualBasic.HideModuleNameAttribute(),  _
     Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute()>  _
    Friend Module MySettingsProperty
        
        <Global.System.ComponentModel.Design.HelpKeywordAttribute("My.Settings")>  _
        Friend ReadOnly Property Settings() As Global.BatchRename.My.MySettings
            Get
                Return Global.BatchRename.My.MySettings.Default
            End Get
        End Property
    End Module
End Namespace
